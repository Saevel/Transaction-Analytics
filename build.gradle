group 'org.dmcs'

version '1.0'

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.bmuschko:gradle-docker-plugin:3.0.8'
    }
}

apply plugin: 'groovy'

apply plugin: 'com.bmuschko.docker-remote-api'

import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage

dependencies {
    // TODO: Do we need Gradle API as dependency?
    compile gradleApi()
    compile localGroovy()
}

docker {
    url=System.getenv('DOCKER_MACHINE_URL')
    certPath=file(System.getenv('DOCKER_CERT_PATH'))
}

task sparkDocker(type: DockerBuildImage){
    inputDir = project.file(project.projectDir.path + "/src/main/docker")
}

import org.dmcs.transaction.analytics.docker.DockerfileScout

task dockerize {
    DockerfileScout scout = new DockerfileScout()
    project.subprojects.each{ subproject ->
        if(scout.hasDockerDeployables(subproject.path)) {
            subproject.tasks.each { task ->
                subproject.tasks.findByName("dockerize").execute()
            }
        }
    }
}

// TODO: Tasks to deploy to Mesopshere Chronos (Batch Layer) and Marathon (Speed Layer, Classical, Tests) via REST API calls