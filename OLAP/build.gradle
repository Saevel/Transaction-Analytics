group 'org.dmcs'
version '1.0'

buildscript {

    repositories {
        mavenCentral()
        jcenter()
    }
}

apply plugin: 'scala'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
}

sourceSets {
    integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/it/scala')
        }
        resources.srcDir file('src/it/resources')
    }
}

configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}

dependencies {

    compile group: 'org.scala-lang', name: 'scala-library', version: '2.11.8'
    compile group: 'com.outworkers', name: 'phantom-streams_2.11', version: '2.0.0'
    compile group: 'com.typesafe.akka', name: 'akka-http_2.11', version: '10.0.1'
    compile group: 'org.typelevel', name: 'cats-core_2.11', version: '0.9.0'


    compile project(':Model')
    compile project(':Events')

    compile fileTree(dir: 'libs', include: ['*.jar'])

    testCompile group: 'org.scalatest', name: 'scalatest_2.11', version: '3.0.0'
    testCompile group: 'org.scalacheck', name: 'scalacheck_2.11', version: '1.12.6'
}

task it(type: Test) {
    testClassesDir = sourceSets.integrationTest.output.classesDir
    classpath = sourceSets.integrationTest.runtimeClasspath
    outputs.upToDateWhen { false }
}

check.dependsOn it
it.mustRunAfter test